# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET      /javascriptRoutes                  controllers.AdminController.javascriptRoutes()
GET      /admin/login                       controllers.AdminController.login(next: String ?= null)
POST     /admin/doLogin                     controllers.AdminController.doLogin()
GET      /admin/logout                      controllers.AdminController.logout()
GET      /admin/cla/new                     controllers.AdminController.newCla()
GET      /admin/cla/:name/edit              controllers.AdminController.editCla(name: String)
GET      /admin/cla/:name/exists            controllers.AdminController.ajaxCheckClaName(name: String)
POST     /admin/cla/update                  controllers.AdminController.updateCla()
GET      /admin/cla/default                 controllers.AdminController.defaultCla()
POST     /admin/cla/default/update          controllers.AdminController.updateDefault()
GET      /admin/inputs                      controllers.AdminController.inputFields()
GET      /admin/input/new                   controllers.AdminController.newInputField()
POST     /admin/input/add                   controllers.AdminController.addInputField()
GET      /admin/clas/manage                 controllers.AdminController.manage()
GET      /admin/dco/edit                    controllers.AdminController.editDco()
POST     /admin/dco/update                  controllers.AdminController.updateDco()
GET      /admin/projects/manage             controllers.AdminController.manageProjects()
GET      /admin/projects/:project           controllers.AdminController.manageProject(project: String)
POST     /admin/projects/:project/update    controllers.AdminController.updateProjectMapping(project: String)
GET      /admin/search                      controllers.AdminController.search()
GET      /admin/projects                    controllers.AdminController.ajaxProjectClas()
GET      /admin/signedClas                  controllers.AdminController.ajaxSearch(project: String ?= null, state: String ?= null)
GET      /admin/review/:uuid                controllers.AdminController.review(uuid: String)
POST     /admin/review/:uuid/approve        controllers.AdminController.approve(uuid: String)
POST     /admin/review/:uuid/reject         controllers.AdminController.reject(uuid: String)
GET      /admin/admins                      controllers.AdminController.admins()
POST     /admin/admins/add                  controllers.AdminController.addAdmin()
POST     /admin/admins/:id/remove           controllers.AdminController.removeAdmin(id: Long)
GET      /admin/cclas/rejectExpired         controllers.AdminController.rejectExpiredCclas()

GET      /admin/api/clas                          controllers.ApiController.clas()
GET      /admin/api/cla/default/preview           controllers.ApiController.previewDefault()
GET      /admin/api/cla/:name/:revision/preview   controllers.ApiController.previewCla(name: String, revision: Int)
POST     /admin/api/cla/:name/:revision/setup     controllers.ApiController.setupCla(name: String, revision: Int, org: String, repo: String)
POST     /admin/api/projects/:org/:repo/import    controllers.ApiController.importPullRequests(org: String, repo: String, claName: String, revision: Int)

GET      /dco                               controllers.ClaController.dco()
GET      /cla/:uuid                         controllers.ClaController.index(uuid: String)
GET      /cla/:uuid/github/callback         controllers.ClaController.authCallback(uuid: String, code: String)
POST     /cla/:uuid/sign                    controllers.ClaController.signCla(uuid: String)
POST     /github/pull/callback              controllers.ClaController.pullRequestHookCallback()

GET      /review/:uuid                      controllers.ExternalReviewController.review(uuid: String, token: String)
POST     /review/:uuid/approve              controllers.ExternalReviewController.approve(uuid: String)
POST     /review/:uuid/reject               controllers.ExternalReviewController.reject(uuid: String)

GET      /                                  controllers.DevController.login()
GET      /login/github/callback             controllers.DevController.authCallback(code: String)
GET      /view/clas                         controllers.DevController.viewClas()
GET      /view/:uuid                        controllers.DevController.viewCla(uuid: String)
GET      /view/:uuid/pdf                    controllers.DevController.viewPdf(uuid: String)
POST     /cla/:uuid/revoke                  controllers.DevController.revokeCla(uuid: String)
GET      /preview/:org/:repo                controllers.DevController.previewRedirect(org: String, repo: String)
GET      /logout                            controllers.DevController.logout()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
